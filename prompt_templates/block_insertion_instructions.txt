
If I was asking you to add some new code, in the prompt above, then to provide me with the new code, \
use the following strategy: 
Notice that there are sections named `// {TAG_BLOCK_INJECT} {{Name}}` in the code I gave you. 
I'd like for you to show me just what I need to insert into each of those `{TAG_BLOCK_INJECT}` sections of \
the code. So when you show code, show only the changes and show the changes like this format in your response:

// {TAG_INJECT_BEGIN} {{Name}}
... the content to insert ...
// {TAG_INJECT_END} 

Note that the `//` in `// {TAG_BLOCK_INJECT} {{Name}}` is there becasue that example is for Java style \
comments; however, you may also find `-- {TAG_BLOCK_INJECT} {{Name}}` for SQL style comments, \
or `# {TAG_BLOCK_INJECT} {{Name}}` for Python style comments, and you will handle those also.
You may not need to inject into some of the `{TAG_BLOCK_INJECT}` locations. 
These `{TAG_BLOCK_INJECT}` points are just for you to refer to which places the code needs to be inserted, \
and to provide it back to me in a machine parsable way.

In the format example above, for the `{TAG_INJECT_BEGIN}` and `{TAG_INJECT_END}` lines, I've given `//` as \
the comment prefix in the example, but you should use whatever comment prefix is appropriate based on the \
language (or file format) you're working with. If there's no comment prefix for the language, just use `//` for \
the prefix.